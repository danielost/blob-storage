// +build !skippackr
// Code generated by github.com/gobuffalo/packr/v2. DO NOT EDIT.

// You can use the "packr2 clean" command to clean up this,
// and any other packr generated files.
package packrd

import (
	"github.com/gobuffalo/packr/v2"
	"github.com/gobuffalo/packr/v2/file/resolver"
)

var _ = func() error {
	const gk = "b3ea633ad296380d7cebac6c67fda319"
	g := packr.New(gk, "")
	hgr, err := resolver.NewHexGzip(map[string]string{
		"ca71285196e32e1f7b766c17e610ab5c": "1f8b08000000000000ff8c8eb18e83301005fbfd8a57dee98e2fa022810e4184a08e4c5891556c8ccc1242be3e1234946967a69828c29f933e18653423d1b9ca923a439d9cf20cadf5ed841f0200e9d04a3f71106331067126ac78f0fabfd9a7b13343f9a528ca1a4593e7bbb80536caddd528541c4f6adc8845f4eee79de0ed07ded28e2d7f91fec644c7ebd42f03515a9597e3754cf4090000ffff99766a8bdb000000",
	})
	if err != nil {
		panic(err)
	}
	g.DefaultResolver = hgr

	func() {
		b := packr.New("migrations", "./migrations")
		b.SetResolver("001_initial.sql", packr.Pointer{ForwardBox: gk, ForwardPath: "ca71285196e32e1f7b766c17e610ab5c"})
	}()
	return nil
}()
